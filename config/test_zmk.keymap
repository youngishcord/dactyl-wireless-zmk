#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 50 // 10

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};
/ {
    behaviors {
        page_encoder: page_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PG_UP>, <&kp PG_DN>;
        };
        volume_encoder: volume_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_VOL_UP>;
        };
        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |
            bindings = <
    &kp Q      &kp W    &kp E    &kp R      &kp T    &kp Y               &kp Y     &kp U     &kp I      &kp ESC    &kp 1    &kp 2
    &kp A      &kp B    &kp C    &kp D      &kp E    &kp F               &kp H     &kp J     &kp K      &kp TAB    &kp A    &kp S
    &kp LSHIFT &kp 3    &kp X    &kp LSHIFT &kp Z    &kp X               &kp N     &kp M     &kp COMMA  &kp LSHIFT &kp Z    &kp X
    &kp LSHIFT &kp 4    &kp X    &kp LSHIFT &kp Z    &kp X               &kp N     &kp M     &kp COMMA  &kp LSHIFT &kp Z    &kp X
    &kp LSHIFT &kp 5    &kp X    &kp LSHIFT &kp Z    &kp X               &kp N     &kp M     &kp COMMA  &kp LSHIFT &kp Z    &kp X
                        &kp Q    &kp W      &kp E    &kp X               &kp 5     &kp X     &kp LSHIFT &kp Z    
            >;

            sensor-bindings = 
            <&scroll_encoder>, 
            <&volume_encoder>;
        };
    };
};